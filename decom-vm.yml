---
 - name: Decommission VM on vCenter
   become: false
   hosts: all
   gather_facts: true

   vars:
     #decom_vm: 'rhel86-tpl'
     #staging_folder: /SDDC-Datacenter/vm/Workloads
     

   tasks: 
     - name: Gather info on vm to decommission
       community.vmware.vmware_vm_info:
         hostname: '{{ vcenter_hostname }}'
         username: '{{ vcenter_username }}'
         password: '{{ vcenter_password }}'
         folder: '{{ staging_folder }}'
         vm_name: '{{ decom_vm }}'
         show_tag: true
       delegate_to: localhost
       register: vm_info

     - name: Display tags related to vm
       debug:
         msg: "{{ vm_info }}"

     - name: Store stage date tag as fact
       set_fact:
         stage_tag: "{{ item }}"
       loop: "{{ vm_info.virtual_machines[0].tags | json_query(query) }}"
       vars:
         query: "[?category_name==`stage-date`]"

     - name: Store deletion date tag as fact
       set_fact:
         decom_tag: "{{ item }}"
       loop: "{{ vm_info.virtual_machines[0].tags | json_query(query) }}"
       vars:
         query: "[?category_name==`deletion-date`]"

     - name: Print deletion date
       debug:
         msg: "{{ decom_tag.name }}"

     - name: Check if deletion date has been reach on vm
       debug:
         msg: "{{ ((decom_tag.name | to_datetime) - ( ansible_date_time.date | to_datetime )).days }}"

    #  - name: Create decommissioning inventory group and staging hosts
    #    awx.awx.group:
    #      name: decommissioning
    #      controller_host: "{{ controller_hostname }}"
    #      controller_username: "{{ controller_username }}"
    #      controller_password: "{{ controller_password }}"
    #      inventory: "Workshop Inventory"
    #      hosts: all
     
       

     - name: Gather info on vm to decommission
       community.vmware.vmware_vm_info:
         hostname: '{{ vcenter_hostname }}'
         username: '{{ vcenter_username }}'
         password: '{{ vcenter_password }}'
         show_tag: true
       delegate_to: localhost
       register: all_vms
       
     - name: Save json data as a fact
       set_fact:
         all_vm_info: "{{ all_vms }}" 

     - name: Print all servers and their tags
       debug: 
         msg: "{{ all_vm_info }}" 


     

 


